Modules:
- description: Introduction to Kubernetes architecture and the concepts of how Kubernetes
    deploys applications
  id: 25
  level: 1.0
  name: Kubernetes Overview
  topic: Kubernetes
- description: Approaches, reviews domain-driven design and resilience patterns.
  id: 72
  level: 1.0
  name: Brown Field Microservices
  topic: Microservices
- description: ''
  id: 73
  level: 1.0
  name: Cloud Native Transactions
  topic: Microservices
- description: ''
  id: 75
  level: 1.0
  name: Gateways and Service Meshes
  topic: Microservices
- description: ''
  id: 77
  level: 1.0
  name: Kubernetes Services and Networking
  topic: Microservices
- description: ''
  id: 78
  level: 1.0
  name: Microservice Communications I - APIs
  topic: Microservices
- description: ''
  id: 79
  level: 1.0
  name: Microservice Communications II - RPC
  topic: Microservices
- description: ''
  id: 80
  level: 1.0
  name: Microservice Communications III - Messaging
  topic: Microservices
- description: ''
  id: 81
  level: 1.0
  name: Microservice Operability
  topic: Microservices
- description: ''
  id: 82
  level: 1.0
  name: Microservice Orchestration
  topic: Microservices
- description: ''
  id: 83
  level: 1.0
  name: Microservice Overview
  topic: Microservices
- description: ''
  id: 84
  level: 1.0
  name: Software Delivery Pipelines
  topic: Microservices
- description: ''
  id: 85
  level: 1.0
  name: Observability Overview
  topic: Microservices
- description: ''
  id: 86
  level: 1.0
  name: Stateless Services and Polyglot Persistence
  topic: Microservices
- description: Learn the basic components of Kafka and how they programatically relate.
  id: 91
  level: 1.0
  name: Overview of Kafka Development
  topic: Kafka
- description: Learn the Producer client API.
  id: 92
  level: 1.0
  name: Building Producers
  topic: Kafka
- description: Learn the Consumer client API.
  id: 93
  level: 1.0
  name: Building Consumers
  topic: Kafka
- description: Learn the Connector API.
  id: 94
  level: 1.0
  name: Developing Connectors
  topic: Kafka
- description: Learn how Producers can be resilant to Kafka failures.
  id: 95
  level: 1.0
  name: Managing Failure Modes in Producers
  topic: Kafka
- description: Learn how Consumers can be resilant to Kafka failuers.
  id: 96
  level: 1.0
  name: Managing Failure Modes in Consumers
  topic: Kafka
- description: Learn the Stream API.
  id: 97
  level: 1.0
  name: Developing Stream Processors
  topic: Kafka
- description: Learn about state management when using the Stream API.
  id: 98
  level: 1.0
  name: Developing Stateful Stream Processors
  topic: Kafka
- description: Provides a basic overview of the Helm Package Manager for Kubernetes
  id: 128
  level: 1.0
  name: Overview
  topic: Helm
- description: Provides a basic overview of the architecture of the Istio Service
    Mesh
  id: 133
  level: 1.0
  name: Architecture
  topic: Istio
- description: ''
  id: 142
  level: 1.0
  name: Overview
  topic: Rust
- description: ''
  id: 156
  level: 1.0
  name: Spark Overview
  topic: Spark
- description: ''
  id: 160
  level: 1.0
  name: Overview
  topic: Linux
- description: Provides a basic overview of the ArangoDB multi-modal data store and
    its core user cases
  id: 174
  level: 1.0
  name: Overview
  topic: Arangodb
- description: Provides a basic overview of Graphql and its core use cases
  id: 180
  level: 1.0
  name: '101'
  topic: Graphql
- description: ''
  id: 196
  level: 1.0
  name: Container Introduction
  topic: Containers
- description: ''
  id: 202
  level: 1.0
  name: Container Basics
  topic: Containers
- description: A combined introduction to container technologies and orchestration
  id: 221
  level: 1.0
  name: Containers & Orchestration
  topic: Kubernetes
- description: ''
  id: 236
  level: 1.0
  name: Observability
  topic: Microservices
- description: ''
  id: 237
  level: 1.0
  name: Cloud Native Systems Overview
  topic: Microservices
- description: ''
  id: 245
  level: 1.01
  name: An introduction to machine learning.
  topic: AI
- description: ''
  id: 246
  level: 1.02
  name: Working with numpy and pandas for data processing.
  topic: AI
- description: ''
  id: 247
  level: 1.03
  name: Preparing data for use in machine learning and ai scenarios.
  topic: AI
- description: ''
  id: 248
  level: 1.04
  name: Data visualization and exploratory data analysis.
  topic: AI
- description: Introduction to containers and containerized applications using Docker
  id: 9
  level: 1.1
  name: Containers Overview
  topic: Containers
- description: Defining Kubernetes Pods, Pod lifecycles, and pod creation using YAML
    manifests
  id: 27
  level: 1.1
  name: Pod Basics
  topic: Kubernetes
- description: Introduction to containers, image building with Dockerfiles and using
    image registries
  id: 47
  level: 1.1
  name: Container Jump Start
  topic: Containers
- description: Learn about the history and basic usage of the Go language.
  id: 58
  level: 1.1
  name: Go Overview
  topic: Go
- description: Learn how to design and refactor Go code.
  id: 61
  level: 1.1
  name: Methods and Interfaces
  topic: Go
- description: Learn about syntax and flow control in Go.
  id: 69
  level: 1.1
  name: Syntax and Flow Control
  topic: Go
- description: ''
  id: 109
  level: 1.1
  name: Introduction
  topic: Python
- description: ''
  id: 194
  level: 1.1
  name: Image Introduction
  topic: Containers
- description: ''
  id: 225
  level: 1.1
  name: Logs and log management
  topic: Microservices
- description: ''
  id: 231
  level: 1.1
  name: Microservice Communications I - REST
  topic: Microservices
- description: ''
  id: 249
  level: 1.11
  name: Measuring models and exploring loses and metrics.
  topic: AI
- description: ''
  id: 250
  level: 1.12
  name: Working with linear machine learning models.
  topic: AI
- description: ''
  id: 251
  level: 1.13
  name: Working with supervised non-linear machine learning models.
  topic: AI
- description: ''
  id: 252
  level: 1.14
  name: Working with unsupervised non-linear machine learning models.
  topic: AI
- description: Overview of all of Kubernetes' controllers for stateless, batch, and
    stateful applications
  id: 12
  level: 1.2
  name: Controllers
  topic: Kubernetes
- description: Understand the basic data types of the Go language.
  id: 53
  level: 1.2
  name: Data Types
  topic: Go
- description: How to develop functions in Go.
  id: 57
  level: 1.2
  name: Functions
  topic: Go
- description: Learn how to organize and share Go code using modules.
  id: 62
  level: 1.2
  name: Go Modules
  topic: Go
- description: Learn how to create Go packages.
  id: 64
  level: 1.2
  name: Package Managment
  topic: Go
- description: Learn how Go packages, libraries, and main (drivers) programs work
    in Go.
  id: 65
  level: 1.2
  name: Program Construction
  topic: Go
- description: Learn how to create user defined types in Go.
  id: 71
  level: 1.2
  name: User Defined Types
  topic: Go
- description: ''
  id: 107
  level: 1.2
  name: Flow Control
  topic: Python
- description: ''
  id: 108
  level: 1.2
  name: Functions
  topic: Python
- description: ''
  id: 121
  level: 1.2
  name: Strings and Numbers
  topic: Python
- description: Detailed exploration on ArangoDB's querying language
  id: 168
  level: 1.2
  name: ArangoDB Query Language
  topic: Arangodb
- description: A look at how to query data and produce meaningful results using GraphQL
  id: 178
  level: 1.2
  name: Queries & Mutations
  topic: Graphql
- description: ''
  id: 192
  level: 1.2
  name: Topics
  topic: Kafka
- description: ''
  id: 198
  level: 1.2
  name: Controlling Containers
  topic: Containers
- description: ''
  id: 233
  level: 1.2
  name: Microservice Communications II - RPC
  topic: Microservices
- description: ''
  id: 238
  level: 1.2
  name: Cloud Native Communications Patterns
  topic: Microservices
- description: Zero downtime rolling updates for stateless applications using the
    Deployment controller
  id: 11
  level: 1.21
  name: Deployments
  topic: Kubernetes
- description: ''
  id: 253
  level: 1.21
  name: Tuning and experimenting hyperparameters.
  topic: AI
- description: ''
  id: 254
  level: 1.22
  name: An overview of deep learning concepts and tools.
  topic: AI
- description: Data science workloads and batch applications using Kubernetes Jobs
    and CronJobs
  id: 10
  level: 1.23
  name: Batch Jobs
  topic: Kubernetes
- description: ''
  id: 255
  level: 1.23
  name: Modern deep learning architectures.
  topic: AI
- description: ''
  id: 256
  level: 1.24
  name: ''
  topic: AI
- description: Detailed discussion on how Istio coordinates it various Envoy proxies
    from a central control plane
  id: 134
  level: 1.25
  name: Control Plane
  topic: Istio
- description: ''
  id: 145
  level: 1.25
  name: Data Types & Flow Control
  topic: Rust
- description: ''
  id: 161
  level: 1.25
  name: Filesystem
  topic: Linux
- description: Expose Pods to clients using Kubernetes Services and DNS
  id: 31
  level: 1.3
  name: Services
  topic: Kubernetes
- description: Learn advance usage patterns of functions and methods.
  id: 49
  level: 1.3
  name: Advanced Functions and Methods
  topic: Go
- description: ''
  id: 105
  level: 1.3
  name: Errors and Exceptions
  topic: Python
- description: ''
  id: 106
  level: 1.3
  name: File IO
  topic: Python
- description: ''
  id: 123
  level: 1.3
  name: Working with Packages
  topic: Python
- description: ''
  id: 188
  level: 1.3
  name: Producers & Consumers
  topic: Kafka
- description: ''
  id: 199
  level: 1.3
  name: Image Registries
  topic: Containers
- description: ''
  id: 232
  level: 1.3
  name: Container Packaging
  topic: Microservices
- description: ''
  id: 239
  level: 1.3
  name: Connectivity And Composition Patterns
  topic: Microservices
- description: 'Dynamic Kubernetes application configuration using: ConfigMaps, Secrets,
    and the Downward API'
  id: 2
  level: 1.4
  name: Application Configuration
  topic: Kubernetes
- description: Understand the error package and using errors in your Go code.
  id: 56
  level: 1.4
  name: Error Handling
  topic: Go
- description: Learn how to write tests in Go.
  id: 70
  level: 1.4
  name: Testing
  topic: Go
- description: ''
  id: 117
  level: 1.4
  name: Program Construction
  topic: Python
- description: ''
  id: 182
  level: 1.4
  name: Brokers
  topic: Kafka
- description: ''
  id: 195
  level: 1.4
  name: Container Volumes
  topic: Containers
- description: ''
  id: 234
  level: 1.4
  name: Microservice Communication III - Messaging
  topic: Microservices
- description: ''
  id: 240
  level: 1.4
  name: Data Management Patterns
  topic: Microservices
- description: OCI / Docker images including registries and image creation with Dockerfiles
  id: 8
  level: 1.5
  name: Images Overview
  topic: Containers
- description: Examining multi-container Pod architecture, Pod design patterns, and
    best practices for Pods
  id: 28
  level: 1.5
  name: Pod Architecture
  topic: Kubernetes
- description: ''
  id: 122
  level: 1.5
  name: Testing
  topic: Python
- description: Discussion on Envoy, the software Istio uses to provide a majority
    of its capabilities
  id: 135
  level: 1.5
  name: Envoy
  topic: Istio
- description: ''
  id: 148
  level: 1.5
  name: Collections
  topic: Rust
- description: ''
  id: 162
  level: 1.5
  name: Editing Files
  topic: Linux
- description: Explanation of ArangoDB's Graph Database capabilities
  id: 176
  level: 1.5
  name: Graphs
  topic: Arangodb
- description: Exploration of the Schema Types supported by GraphQL
  id: 179
  level: 1.5
  name: Schemas & Types
  topic: Graphql
- description: ''
  id: 186
  level: 1.5
  name: Failure Modes
  topic: Kafka
- description: ''
  id: 203
  level: 1.5
  name: Container Networking
  topic: Containers
- description: ''
  id: 226
  level: 1.5
  name: Metrics and Autoscaling
  topic: Microservices
- description: ''
  id: 241
  level: 1.5
  name: Event-driven Architecture Patterns
  topic: Microservices
- description: Examination of container images, image metadata, and pushing images
    to private registries
  id: 88
  level: 1.6
  name: Images and Registries
  topic: Containers
- description: ''
  id: 227
  level: 1.6
  name: Service Mesh and Tracing
  topic: Microservices
- description: ''
  id: 235
  level: 1.6
  name: Cloud Native Transactions And Event Sourcing
  topic: Microservices
- description: A look at basic administrative operations within ArangoDB, including
    user management and monitoring
  id: 170
  level: 1.7
  name: Basic Administration
  topic: Arangodb
- description: Discussion on GraphQL Best Practices
  id: 181
  level: 1.7
  name: Best Practices
  topic: Graphql
- description: ''
  id: 200
  level: 1.7
  name: Advanced Container Operations
  topic: Containers
- description: ''
  id: 149
  level: 1.75
  name: Structures, Enumerations, & Pattern Matching
  topic: Rust
- description: ''
  id: 158
  level: 1.75
  name: Spark on Kubernetes
  topic: Spark
- description: ''
  id: 201
  level: 1.8
  name: Security
  topic: Containers
- description: Lightweight Kubernetes cluster multitenancy using Namespaces, Quotas,
    and LimtRanges
  id: 20
  level: 1.9
  name: Namespaces
  topic: Kubernetes
- description: 'Storage abstractions in Kubernetes: Persistent Volumes (PVs), Persistent
    Volume Claims (PVCs), and Storage Classes'
  id: 26
  level: 1.9
  name: State Primitives
  topic: Kubernetes
- description: ''
  id: 197
  level: 1.9
  name: Orchestration
  topic: Containers
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKAD exam
  id: 217
  level: 1.9
  name: CKAD Drills Part 1
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKA exam
  id: 210
  level: 1.91
  name: CKA Drills Part 4
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKA exam
  id: 211
  level: 1.92
  name: CKA Drills Part 3
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKAD exam
  id: 220
  level: 1.92
  name: CKAD Drills Part 2
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKA exam
  id: 212
  level: 1.93
  name: CKA Drills Part 1
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKAD exam
  id: 219
  level: 1.93
  name: CKAD Drills Part 3
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKA exam
  id: 213
  level: 1.94
  name: CKA Drills Part 2
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKAD exam
  id: 218
  level: 1.94
  name: CKAD Drills Part 4
  topic: Kubernetes
- description: Examines the basic architecture and interaction with Helm Charts
  id: 129
  level: 1.99
  name: Chart Basics
  topic: Helm
- description: ''
  id: 141
  level: 1.99
  name: Functions
  topic: Rust
- description: ''
  id: 157
  level: 1.99
  name: Observability & Scaling
  topic: Spark
- description: ''
  id: 163
  level: 1.99
  name: Shell Operations
  topic: Linux
- description: 'Scheduling Pods using Pod and Node metadata: affinities, anti-affinities,
    Node taints and Pod tolerations'
  id: 29
  level: 2.0
  name: Scheduling
  topic: Kubernetes
- description: Explores the practices around creating a Helm chart for an application
  id: 130
  level: 2.0
  name: Templating
  topic: Helm
- description: Exploration of Istio's basic Traffic Management capabilities, focusing
    on Timeouts, Health Checks, and Fault Injection
  id: 136
  level: 2.0
  name: Basic Traffic Management
  topic: Istio
- description: ''
  id: 146
  level: 2.0
  name: Methods & Traits
  topic: Rust
- description: ''
  id: 154
  level: 2.0
  name: Kubernetes in the Cloud
  topic: Spark
- description: ''
  id: 164
  level: 2.0
  name: File Processing
  topic: Linux
- description: Discussion on different ArangoDB deployment patterns, infrastructure
    support, and scaling considerations
  id: 169
  level: 2.0
  name: Architecture
  topic: Arangodb
- description: ''
  id: 191
  level: 2.0
  name: Streams
  topic: Kafka
- description: 'Scheduling Pods using Pod and Node metadata: affinities, anti-affinities,
    Node taints and Pod tolerations'
  id: 204
  level: 2.0
  name: Pod Scheduling
  topic: Kubernetes
- description: Basic overview of the AWS Elastic Kubernetes Service (EKS) offering
  id: 205
  level: 2.0
  name: EKS Overview
  topic: Kubernetes
- description: Exploration of the concept of Service Meshes applied to Kubernetes
  id: 209
  level: 2.0
  name: Service Mesh Overview
  topic: Kubernetes
- description: ''
  id: 228
  level: 2.0
  name: Advanced Deployment Models
  topic: Microservices
- description: ''
  id: 242
  level: 2.0
  name: Aggregates
  topic: Microservices
- description: Examination of Kubernetes control plane components, etcd, HA models,
    and worker Node agents
  id: 4
  level: 2.1
  name: Kubernetes Architecture
  topic: Kubernetes
- description: In-depth examination of the Kubernetes Dashboard
  id: 13
  level: 2.1
  name: Dashboard
  topic: Kubernetes
- description: 'Overview the aspects of Observability: Logging, metrics, and tracing
    and implementations in Kubernetes'
  id: 24
  level: 2.1
  name: Observability Overview
  topic: Kubernetes
- description: 'Kubernetes volume operations: resizing, snapshotting, and backup and
    restore'
  id: 36
  level: 2.1
  name: State Operations
  topic: Kubernetes
- description: Learn how to create concurrent functions in Go.
  id: 52
  level: 2.1
  name: CSP and Go Routines
  topic: Go
- description: Learn the best practices when developing Go programs.
  id: 60
  level: 2.1
  name: Idiomatic Go
  topic: Go
- description: Review of the Go language for those with basic knowledge of Go.
  id: 67
  level: 2.1
  name: Review of Go
  topic: Go
- description: Learn about the Go standard library.
  id: 68
  level: 2.1
  name: The Go Standard Library
  topic: Go
- description: ''
  id: 104
  level: 2.1
  name: Data
  topic: Python
- description: ''
  id: 120
  level: 2.1
  name: Standard Library
  topic: Python
- description: ''
  id: 189
  level: 2.1
  name: Schema Registry
  topic: Kafka
- description: Discussion of optimal practices when using EKS
  id: 208
  level: 2.1
  name: EKS In Practice
  topic: Kubernetes
- description: ''
  id: 229
  level: 2.1
  name: GitOps
  topic: Microservices
- description: ''
  id: 243
  level: 2.1
  name: Operational Patterns
  topic: Microservices
- description: Explorer using and managing channel objects.
  id: 50
  level: 2.2
  name: Channels as First Class Values
  topic: Go
- description: ''
  id: 103
  level: 2.2
  name: Collections and Comprehensions
  topic: Python
- description: Examination of ArangoDB's data model, indexing capabilities, and transactional
    queries
  id: 172
  level: 2.2
  name: Data Modeling, Indexing, & Transactions
  topic: Arangodb
- description: ''
  id: 190
  level: 2.2
  name: Security
  topic: Kafka
- description: ''
  id: 244
  level: 2.2
  name: Migration Patterns
  topic: Microservices
- description: ''
  id: 139
  level: 2.25
  name: Ownership & Borrowing
  topic: Rust
- description: ''
  id: 159
  level: 2.25
  name: Airflow Overview
  topic: Spark
- description: 'Software defined networking (SDN) and Kubernetes: networking models,
    network policy, and SDN configuration'
  id: 32
  level: 2.3
  name: Software Defined Networking
  topic: Kubernetes
- description: Learning how to control asynchronous Go routines with the context package.
  id: 51
  level: 2.3
  name: Context
  topic: Go
- description: 'Introduction to building container images with Dockerfiles including:
    Dockerfile syntax, caching, and build options'
  id: 89
  level: 2.3
  name: 'Dockerfiles: Basics'
  topic: Containers
- description: ''
  id: 102
  level: 2.3
  name: Classes and OOP
  topic: Python
- description: ''
  id: 187
  level: 2.3
  name: Monitoring
  topic: Kafka
- description: Overview of software defined networking, network policy and ingress
    load balancing
  id: 33
  level: 2.31
  name: Pod Networking Overview
  topic: Kubernetes
- description: 'Kubernetes Network Policy concepts and primitives: ingress and egress
    policies, patterns, and limitations'
  id: 39
  level: 2.32
  name: Network Policy
  topic: Kubernetes
- description: 'Kubernetes ingress load balancing: concepts, rules, primitives, TLS
    termination, and rate limiting'
  id: 40
  level: 2.33
  name: Ingress Load Balancing
  topic: Kubernetes
- description: Explore the Golang 3rd party ecosystem.
  id: 48
  level: 2.4
  name: Go's 3rd Party Ecosystem
  topic: Go
- description: Learn how to debug Go programs, techniiques and tools like Delve.
  id: 54
  level: 2.4
  name: Debugging
  topic: Go
- description: Learn how to use the Go profiling tools.
  id: 55
  level: 2.4
  name: Profiling and Performance
  topic: Go
- description: Learn about the http package from the Go standard library.
  id: 59
  level: 2.4
  name: The Go Http Library
  topic: Go
- description: 'Advanced patterns using Dockerfiles: multistage and automated builds,
    advanced syntax, and best practices'
  id: 90
  level: 2.4
  name: 'Dockerfiles: Advanced'
  topic: Containers
- description: ''
  id: 193
  level: 2.4
  name: Zookeeper
  topic: Kafka
- description: The StatefulSet application controller and Kubernetes' storage abstraction
    using Storage Classes, PVs, and PVCs
  id: 19
  level: 2.5
  name: Stateful Workloads
  topic: Kubernetes
- description: Kubernetes Role Based Access Control (RBAC) concepts and primitives
    for users and application Pods
  id: 37
  level: 2.5
  name: RBAC
  topic: Kubernetes
- description: Learn about the reflection package from the Go standard library.
  id: 66
  level: 2.5
  name: Reflection
  topic: Go
- description: Look at how Istio enables external traffic into the cluster as an Ingress
    Controller
  id: 137
  level: 2.5
  name: Ingress
  topic: Istio
- description: ''
  id: 155
  level: 2.5
  name: Airflow in Kubernetes
  topic: Spark
- description: ''
  id: 165
  level: 2.5
  name: Text Processing
  topic: Linux
- description: Discussion on data access & search optimization in ArangoDB
  id: 173
  level: 2.5
  name: Data Operations
  topic: Arangodb
- description: Discussion of how to control access to EKS clusters through AWS Identity
    & Access Management
  id: 206
  level: 2.5
  name: EKS & IAM
  topic: Kubernetes
- description: Exposing locally attached storage to application Pods with damanding
    disk IOPS
  id: 18
  level: 2.51
  name: Local Storage
  topic: Kubernetes
- description: Techniques for exposing file storage systems to Kubernetes Pods
  id: 15
  level: 2.52
  name: File Storage
  topic: Kubernetes
- description: Kubernetes block storage volumes and block storage CSI features
  id: 6
  level: 2.59
  name: Block Storage
  topic: Kubernetes
- description: Exploration of the integration between EKS, AWS EC2 autoscaling, and
    how to optimize costs
  id: 207
  level: 2.6
  name: EKS Autoscaling
  topic: Kubernetes
- description: Exploration of how to expand ArangoDB's API through the use of Foxx
    Javascript extensions
  id: 175
  level: 2.7
  name: Foxx Javascript Microservices
  topic: Arangodb
- description: ''
  id: 150
  level: 2.75
  name: Generics
  topic: Rust
- description: ''
  id: 166
  level: 2.75
  name: Processes & Job Control
  topic: Linux
- description: Guidance and best practices for building secure microservice APIs
  id: 3
  level: 2.9
  name: API Security
  topic: Kubernetes
- description: 'Kubernetes day 2 operations covered: version upgrades and adding infrastructure
    nodes'
  id: 7
  level: 2.9
  name: Cluster Maintenance
  topic: Kubernetes
- description: 'Examination of the Kubernetes database: etcd; including bootstrapping,
    sizing, backup and restore'
  id: 14
  level: 2.9
  name: etcd
  topic: Kubernetes
- description: Troubleshooting stuck or crashing Pods, network connectivity and service
    discovery and cluster components (optional)
  id: 35
  level: 2.9
  name: Troubleshooting
  topic: Kubernetes
- description: ''
  id: 230
  level: 2.9
  name: Software Supply Chain Security
  topic: Microservices
- description: Accessing Kubernetes Pod application logs, configuring logging drivers,
    and strategies for log forwarding
  id: 21
  level: 2.97
  name: Observability - Logging
  topic: Kubernetes
- description: Implementing tracing solutions in distributed orchestration systems
    using containers and Kubernetes
  id: 23
  level: 2.98
  name: Observability - Tracing
  topic: Kubernetes
- description: Templating for Kubernetes application manifests using the kustomize
    command line utility
  id: 17
  level: 2.99
  name: Kustomize
  topic: Kubernetes
- description: Kubernetes metrics APIs, the Metrics Server, and using metrics to power
    Pod autoscaling
  id: 22
  level: 2.99
  name: Observability - Metrics
  topic: Kubernetes
- description: Discusses additional details in chart building, such as establishing
    dependencies
  id: 127
  level: 2.99
  name: Chart Patterns
  topic: Helm
- description: Exploration of Policy-based networking control on the Istio Service
    Mesh using its own custom resources
  id: 132
  level: 2.99
  name: Policy
  topic: Istio
- description: ''
  id: 143
  level: 2.99
  name: Packages
  topic: Rust
- description: ''
  id: 153
  level: 2.99
  name: Cost Management
  topic: Spark
- description: ''
  id: 167
  level: 2.99
  name: Cgroups & Namespaces
  topic: Linux
- description: 'Security for stateful Pods: Secret encryption, Pod Security Policies,
    and file permissions in Pods'
  id: 30
  level: 3.0
  name: State Security
  topic: Kubernetes
- description: 'Kubernetes volumes: concepts and types; using volumes with the StatefulSet
    controller'
  id: 34
  level: 3.0
  name: State Design
  topic: Kubernetes
- description: Discussion around Istio's Load Balancing and Service Discovery capabilities
  id: 138
  level: 3.0
  name: Advanced Traffic Management
  topic: Istio
- description: ''
  id: 144
  level: 3.0
  name: Errors
  topic: Rust
- description: Discussion on how to improve ArangoDB's runtime performance
  id: 177
  level: 3.0
  name: Performance Tuning
  topic: Arangodb
- description: ''
  id: 183
  level: 3.0
  name: Advanced Stream Processing
  topic: Kafka
- description: Discussion on how communications between Kubernetes Control Plane components
    can be secured
  id: 216
  level: 3.0
  name: Control Plane Security
  topic: Kubernetes
- description: In-depth discussion on the nature of the Kubernetes default scheduler
  id: 222
  level: 3.0
  name: Kube-Scheduler
  topic: Kubernetes
- description: Admission controller operations and key implementations in the Kubernetes
    API Server
  id: 1
  level: 3.1
  name: Admission Control
  topic: Kubernetes
- description: Overview of Kubernetes API security (RBAC, Namespaces, PSP) and Pod
    security (Security Context, Capabilities, etc.)
  id: 87
  level: 3.1
  name: Security Overview
  topic: Kubernetes
- description: ''
  id: 115
  level: 3.1
  name: Numpy
  topic: Python
- description: ''
  id: 116
  level: 3.1
  name: Pandas
  topic: Python
- description: Exploration of how to create clients that can interact with ArangoDB
    programmatically through code
  id: 171
  level: 3.1
  name: Code
  topic: Arangodb
- description: ''
  id: 184
  level: 3.1
  name: Debugging and monitoring Stream Processing Applications
  topic: Kafka
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKS exam
  id: 214
  level: 3.1
  name: CKS Drills Part 1
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKS exam
  id: 215
  level: 3.11
  name: CKS Drills Part 2
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKS exam
  id: 224
  level: 3.13
  name: CKS Drills Part 3
  topic: Kubernetes
- description: A 90-minute session of instructor-led, timed drills geared toward the
    CKS exam
  id: 223
  level: 3.14
  name: CKS Drills Part 4
  topic: Kubernetes
- description: ''
  id: 111
  level: 3.2
  name: Multitasking
  topic: Python
- description: ''
  id: 118
  level: 3.2
  name: Scapy
  topic: Python
- description: ''
  id: 119
  level: 3.2
  name: SQL-DB
  topic: Python
- description: ''
  id: 185
  level: 3.2
  name: Tuning for Scale and Performance
  topic: Kafka
- description: ''
  id: 151
  level: 3.25
  name: Smart Pointers
  topic: Rust
- description: ''
  id: 110
  level: 3.3
  name: Jinja
  topic: Python
- description: ''
  id: 112
  level: 3.3
  name: netconf restconf
  topic: Python
- description: ''
  id: 113
  level: 3.3
  name: Networking Features
  topic: Python
- description: ''
  id: 114
  level: 3.3
  name: Networking Modules
  topic: Python
- description: A look at pod security features and secure pod design approaches.
  id: 124
  level: 3.5
  name: Pod Security
  topic: Kubernetes
- description: ''
  id: 147
  level: 3.5
  name: Concurrency
  topic: Rust
- description: Examination of kubernetes OS based and VM based container runtime solutions
  id: 45
  level: 3.8
  name: Runtimes
  topic: Kubernetes
- description: Using unikernels and/or micro-VMs for improved Pod security and hard
    multi-tenancy in Kubernetes
  id: 44
  level: 3.89
  name: Static Analysis
  topic: Kubernetes
- description: Working with API auditing and audit log policies
  id: 5
  level: 3.9
  name: Auditing
  topic: Kubernetes
- description: 'Best practices for container image security: scanning, image signing,
    and binary authorization'
  id: 16
  level: 3.9
  name: Image Security
  topic: Containers
- description: Using LSM and SecComp to secure pod based services
  id: 38
  level: 3.9
  name: OS Hardening
  topic: Kubernetes
- description: 'Discussion of how observability grants insight into cluster behavior.
    Compare and contrast behavior analysis with signature-based analysis

    '
  id: 46
  level: 3.9
  name: Behavioral Analysis
  topic: Kubernetes
- description: ''
  id: 140
  level: 3.9
  name: Testing
  topic: Rust
- description: Discussion around how to unify two separate Kubernets clusters together
    using Istio
  id: 131
  level: 3.99
  name: Multicluster
  topic: Istio
- description: ''
  id: 152
  level: 3.99
  name: Next Steps
  topic: Rust
- description: 'Securing the Kubernetes API using TLS: best practices and common mistakes
    are discussed'
  id: 41
  level: 4.0
  name: Control Plane TLS
  topic: Kubernetes
- description: Examines Custom Resource Definitions (CRDs) and how to use them.
  id: 125
  level: 4.0
  name: CRDs Overview
  topic: Kubernetes
- description: Explores cloud native approaches to software supply chain security.
  id: 126
  level: 4.0
  name: Supply Chain Security
  topic: Kubernetes
- description: Securing Kubernetes clusters with zone-based architecture and firewalls
  id: 42
  level: 4.1
  name: Network Design
  topic: Kubernetes
- description: ''
  id: 99
  level: 4.1
  name: Python Jupyter
  topic: Python
- description: ''
  id: 100
  level: 4.1
  name: Anaconda_intro
  topic: Python
- description: ''
  id: 101
  level: 4.1
  name: C Extensions
  topic: Python
